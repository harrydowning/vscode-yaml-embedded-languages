{
  "name": "yaml-embedded-languages",
  "version": "1.0.3",
  "displayName": "YAML Embedded Languages",
  "description": "Support for syntax highlighting within YAML block-scalars.",
  "icon": "images/icon.png",
  "publisher": "harrydowning",
  "author": {
    "name": "Harry Downing",
    "email": "harry.downing17@gmail.com"
  },
  "homepage": "https://github.com/harrydowning/yaml-embedded-languages#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/harrydowning/yaml-embedded-languages.git"
  },
  "license": "MIT",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "dist/extension.js",
  "contributes": {
    "grammars": [
      {
        "path": "./syntaxes/source.yaml.injection.tmLanguage.json",
        "scopeName": "source.yaml.injection",
        "injectTo": [
          "source.yaml"
        ],
        "embeddedLanguages": {
          "meta.embedded.inline.bat": "bat",
          "meta.embedded.inline.bibtex": "bibtex",
          "meta.embedded.inline.c": "c",
          "meta.embedded.inline.c#": "csharp",
          "meta.embedded.inline.c\\+\\+": "cpp",
          "meta.embedded.inline.clojure": "clojure",
          "meta.embedded.inline.coffee": "coffeescript",
          "meta.embedded.inline.cpp": "cpp",
          "meta.embedded.inline.csharp": "csharp",
          "meta.embedded.inline.css": "css",
          "meta.embedded.inline.cuda": "cuda-cpp",
          "meta.embedded.inline.dart": "dart",
          "meta.embedded.inline.diff": "diff",
          "meta.embedded.inline.dockercompose": "dockercompose",
          "meta.embedded.inline.dockerfile": "dockerfile",
          "meta.embedded.inline.f#": "fsharp",
          "meta.embedded.inline.fsharp": "fsharp",
          "meta.embedded.inline.go": "go",
          "meta.embedded.inline.groovy": "groovy",
          "meta.embedded.inline.handlebars": "handlebars",
          "meta.embedded.inline.hlsl": "hlsl",
          "meta.embedded.inline.html": "html",
          "meta.embedded.inline.ini": "ini",
          "meta.embedded.inline.jade": "jade",
          "meta.embedded.inline.java": "java",
          "meta.embedded.inline.javascript": "javascript",
          "meta.embedded.inline.js": "javascript",
          "meta.embedded.inline.json": "json",
          "meta.embedded.inline.jsonc": "jsonc",
          "meta.embedded.inline.jsonl": "jsonl",
          "meta.embedded.inline.jsx": "javascriptreact",
          "meta.embedded.inline.julia": "julia",
          "meta.embedded.inline.latex": "latex",
          "meta.embedded.inline.less": "less",
          "meta.embedded.inline.log": "log",
          "meta.embedded.inline.lua": "lua",
          "meta.embedded.inline.make": "makefile",
          "meta.embedded.inline.makefile": "makefile",
          "meta.embedded.inline.markdown": "markdown",
          "meta.embedded.inline.math": "markdown-math",
          "meta.embedded.inline.objc": "objective-c",
          "meta.embedded.inline.objcpp": "objective-cpp",
          "meta.embedded.inline.perl": "perl",
          "meta.embedded.inline.php": "php",
          "meta.embedded.inline.pip": "pip-requirements",
          "meta.embedded.inline.powerfx": "javascript",
          "meta.embedded.inline.powershell": "powershell",
          "meta.embedded.inline.properties": "properties",
          "meta.embedded.inline.py": "python",
          "meta.embedded.inline.python": "python",
          "meta.embedded.inline.r": "r",
          "meta.embedded.inline.raku": "raku",
          "meta.embedded.inline.razor": "razor",
          "meta.embedded.inline.regex": "regex",
          "meta.embedded.inline.requirements": "pip-requirements",
          "meta.embedded.inline.rst": "restructuredtext",
          "meta.embedded.inline.ruby": "ruby",
          "meta.embedded.inline.rust": "rust",
          "meta.embedded.inline.scss": "scss",
          "meta.embedded.inline.shaderlab": "shaderlab",
          "meta.embedded.inline.shell": "shellscript",
          "meta.embedded.inline.sql": "sql",
          "meta.embedded.inline.swift": "swift",
          "meta.embedded.inline.tex": "tex",
          "meta.embedded.inline.ts": "typescript",
          "meta.embedded.inline.tsx": "typescriptreact",
          "meta.embedded.inline.typescript": "typescript",
          "meta.embedded.inline.vb": "vb",
          "meta.embedded.inline.xml": "xml",
          "meta.embedded.inline.xsl": "xsl",
          "meta.embedded.inline.yaml": "yaml"
        }
      },
      {
        "path": "./syntaxes/source.github-actions-workflow.injection.tmLanguage.json",
        "scopeName": "source.github-actions-workflow.injection",
        "injectTo": [
          "source.github-actions-workflow"
        ],
        "embeddedLanguages": {
          "meta.embedded.inline.bat": "bat",
          "meta.embedded.inline.bibtex": "bibtex",
          "meta.embedded.inline.c": "c",
          "meta.embedded.inline.c#": "csharp",
          "meta.embedded.inline.c\\+\\+": "cpp",
          "meta.embedded.inline.clojure": "clojure",
          "meta.embedded.inline.coffee": "coffeescript",
          "meta.embedded.inline.cpp": "cpp",
          "meta.embedded.inline.csharp": "csharp",
          "meta.embedded.inline.css": "css",
          "meta.embedded.inline.cuda": "cuda-cpp",
          "meta.embedded.inline.dart": "dart",
          "meta.embedded.inline.diff": "diff",
          "meta.embedded.inline.dockercompose": "dockercompose",
          "meta.embedded.inline.dockerfile": "dockerfile",
          "meta.embedded.inline.f#": "fsharp",
          "meta.embedded.inline.fsharp": "fsharp",
          "meta.embedded.inline.go": "go",
          "meta.embedded.inline.groovy": "groovy",
          "meta.embedded.inline.handlebars": "handlebars",
          "meta.embedded.inline.hlsl": "hlsl",
          "meta.embedded.inline.html": "html",
          "meta.embedded.inline.ini": "ini",
          "meta.embedded.inline.jade": "jade",
          "meta.embedded.inline.java": "java",
          "meta.embedded.inline.javascript": "javascript",
          "meta.embedded.inline.js": "javascript",
          "meta.embedded.inline.json": "json",
          "meta.embedded.inline.jsonc": "jsonc",
          "meta.embedded.inline.jsonl": "jsonl",
          "meta.embedded.inline.jsx": "javascriptreact",
          "meta.embedded.inline.julia": "julia",
          "meta.embedded.inline.latex": "latex",
          "meta.embedded.inline.less": "less",
          "meta.embedded.inline.log": "log",
          "meta.embedded.inline.lua": "lua",
          "meta.embedded.inline.make": "makefile",
          "meta.embedded.inline.makefile": "makefile",
          "meta.embedded.inline.markdown": "markdown",
          "meta.embedded.inline.math": "markdown-math",
          "meta.embedded.inline.objc": "objective-c",
          "meta.embedded.inline.objcpp": "objective-cpp",
          "meta.embedded.inline.perl": "perl",
          "meta.embedded.inline.php": "php",
          "meta.embedded.inline.pip": "pip-requirements",
          "meta.embedded.inline.powerfx": "javascript",
          "meta.embedded.inline.powershell": "powershell",
          "meta.embedded.inline.properties": "properties",
          "meta.embedded.inline.py": "python",
          "meta.embedded.inline.python": "python",
          "meta.embedded.inline.r": "r",
          "meta.embedded.inline.raku": "raku",
          "meta.embedded.inline.razor": "razor",
          "meta.embedded.inline.regex": "regex",
          "meta.embedded.inline.requirements": "pip-requirements",
          "meta.embedded.inline.rst": "restructuredtext",
          "meta.embedded.inline.ruby": "ruby",
          "meta.embedded.inline.rust": "rust",
          "meta.embedded.inline.scss": "scss",
          "meta.embedded.inline.shaderlab": "shaderlab",
          "meta.embedded.inline.shell": "shellscript",
          "meta.embedded.inline.sql": "sql",
          "meta.embedded.inline.swift": "swift",
          "meta.embedded.inline.tex": "tex",
          "meta.embedded.inline.ts": "typescript",
          "meta.embedded.inline.tsx": "typescriptreact",
          "meta.embedded.inline.typescript": "typescript",
          "meta.embedded.inline.vb": "vb",
          "meta.embedded.inline.xml": "xml",
          "meta.embedded.inline.xsl": "xsl",
          "meta.embedded.inline.yaml": "yaml"
        }
      }
    ],
    "configuration": {
      "title": "YAML Embedded Languages",
      "properties": {
        "yaml-embedded-languages.include": {
          "type": "object",
          "patternProperties": {
            "^.*$": {
              "type": [
                "string",
                "object"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "scopeName": {
                  "type": "string"
                },
                "stripIndent": {
                  "type": "boolean"
                }
              },
              "required": [
                "scopeName"
              ]
            }
          },
          "default": {},
          "description": "Use the key to define the language identifier with regex. Use the value to specify the language TextMate `scopeName`. By default the language identifier will be used as the language name. To change this, an object can be specified with the properties `name` and `scopeName` (required)."
        }
      }
    }
  },
  "devDependencies": {
    "@eslint/js": "^9.9.0",
    "@types/node": "~16.11",
    "@types/vscode": "1.74.0",
    "@vscode/vsce": "^2.29.0",
    "esbuild": "^0.23.1",
    "eslint": "^9.9.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.2.1",
    "globals": "^15.9.0",
    "prettier": "^3.3.3",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.5.4",
    "typescript-eslint": "^8.3.0"
  },
  "scripts": {
    "build": "tsc && node build.mjs",
    "generate": "ts-node -r tsconfig-paths/register src/generate.ts",
    "lint": "eslint",
    "format": "prettier . --check",
    "type": "tsc --noEmit",
    "package": "vsce package",
    "release": "gh release create v$npm_package_version --generate-notes yaml-embedded-languages-$npm_package_version.vsix",
    "publish": "vsce publish"
  }
}