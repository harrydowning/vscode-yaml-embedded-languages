{
  "scopeName": "yaml-embedded-languages.injection",
  "injectionSelector": "L:source.yaml,L:source.github-actions-workflow",
  "patterns": [
    {
      "include": "#bat-block-scalar"
    },
    {
      "include": "#bibtex-block-scalar"
    },
    {
      "include": "#c-block-scalar"
    },
    {
      "include": "#c\\+\\+-block-scalar"
    },
    {
      "include": "#clojure-block-scalar"
    },
    {
      "include": "#coffee-block-scalar"
    },
    {
      "include": "#commit-block-scalar"
    },
    {
      "include": "#cpp-block-scalar"
    },
    {
      "include": "#csharp-block-scalar"
    },
    {
      "include": "#css-block-scalar"
    },
    {
      "include": "#cuda-block-scalar"
    },
    {
      "include": "#dart-block-scalar"
    },
    {
      "include": "#diff-block-scalar"
    },
    {
      "include": "#dockercompose-block-scalar"
    },
    {
      "include": "#dockerfile-block-scalar"
    },
    {
      "include": "#fsharp-block-scalar"
    },
    {
      "include": "#go-block-scalar"
    },
    {
      "include": "#groovy-block-scalar"
    },
    {
      "include": "#handlebars-block-scalar"
    },
    {
      "include": "#hlsl-block-scalar"
    },
    {
      "include": "#html-block-scalar"
    },
    {
      "include": "#ignore-block-scalar"
    },
    {
      "include": "#ini-block-scalar"
    },
    {
      "include": "#jade-block-scalar"
    },
    {
      "include": "#java-block-scalar"
    },
    {
      "include": "#javascript-block-scalar"
    },
    {
      "include": "#js-block-scalar"
    },
    {
      "include": "#json-block-scalar"
    },
    {
      "include": "#jsonc-block-scalar"
    },
    {
      "include": "#jsonl-block-scalar"
    },
    {
      "include": "#jsx-block-scalar"
    },
    {
      "include": "#julia-block-scalar"
    },
    {
      "include": "#latex-block-scalar"
    },
    {
      "include": "#less-block-scalar"
    },
    {
      "include": "#log-block-scalar"
    },
    {
      "include": "#lua-block-scalar"
    },
    {
      "include": "#make-block-scalar"
    },
    {
      "include": "#makefile-block-scalar"
    },
    {
      "include": "#markdown-block-scalar"
    },
    {
      "include": "#math-block-scalar"
    },
    {
      "include": "#objc-block-scalar"
    },
    {
      "include": "#objcpp-block-scalar"
    },
    {
      "include": "#perl-block-scalar"
    },
    {
      "include": "#php-block-scalar"
    },
    {
      "include": "#pip-block-scalar"
    },
    {
      "include": "#powerfx-block-scalar"
    },
    {
      "include": "#powershell-block-scalar"
    },
    {
      "include": "#properties-block-scalar"
    },
    {
      "include": "#py-block-scalar"
    },
    {
      "include": "#python-block-scalar"
    },
    {
      "include": "#r-block-scalar"
    },
    {
      "include": "#raku-block-scalar"
    },
    {
      "include": "#razor-block-scalar"
    },
    {
      "include": "#rebase-block-scalar"
    },
    {
      "include": "#regex-block-scalar"
    },
    {
      "include": "#requirements-block-scalar"
    },
    {
      "include": "#rst-block-scalar"
    },
    {
      "include": "#ruby-block-scalar"
    },
    {
      "include": "#rust-block-scalar"
    },
    {
      "include": "#scss-block-scalar"
    },
    {
      "include": "#shaderlab-block-scalar"
    },
    {
      "include": "#shell-block-scalar"
    },
    {
      "include": "#slim-block-scalar"
    },
    {
      "include": "#sql-block-scalar"
    },
    {
      "include": "#swift-block-scalar"
    },
    {
      "include": "#tex-block-scalar"
    },
    {
      "include": "#ts-block-scalar"
    },
    {
      "include": "#tsx-block-scalar"
    },
    {
      "include": "#typescript-block-scalar"
    },
    {
      "include": "#vb-block-scalar"
    },
    {
      "include": "#xml-block-scalar"
    },
    {
      "include": "#xsl-block-scalar"
    },
    {
      "include": "#yaml-block-scalar"
    }
  ],
  "repository": {
    "bat-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:bat)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.bat",
          "patterns": [
            {
              "include": "source.batchfile"
            }
          ]
        }
      ]
    },
    "bibtex-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:bibtex)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.bibtex",
          "patterns": [
            {
              "include": "text.bibtex"
            }
          ]
        }
      ]
    },
    "c-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:c)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.c",
          "patterns": [
            {
              "include": "source.c"
            }
          ]
        }
      ]
    },
    "c\\+\\+-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:c\\+\\+)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.c\\+\\+",
          "patterns": [
            {
              "include": "source.cpp"
            }
          ]
        }
      ]
    },
    "clojure-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:clojure)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.clojure",
          "patterns": [
            {
              "include": "source.clojure"
            }
          ]
        }
      ]
    },
    "coffee-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:coffee)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.coffee",
          "patterns": [
            {
              "include": "source.coffee"
            }
          ]
        }
      ]
    },
    "commit-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:commit)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.commit",
          "patterns": [
            {
              "include": "text.git-commit"
            }
          ]
        }
      ]
    },
    "cpp-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:cpp)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.cpp",
          "patterns": [
            {
              "include": "source.cpp"
            }
          ]
        }
      ]
    },
    "csharp-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:csharp)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.csharp",
          "patterns": [
            {
              "include": "source.csharp"
            }
          ]
        }
      ]
    },
    "css-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:css)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.css",
          "patterns": [
            {
              "include": "source.css"
            }
          ]
        }
      ]
    },
    "cuda-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:cuda)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.cuda",
          "patterns": [
            {
              "include": "source.cuda-cpp"
            }
          ]
        }
      ]
    },
    "dart-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:dart)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.dart",
          "patterns": [
            {
              "include": "source.dart"
            }
          ]
        }
      ]
    },
    "diff-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:diff)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.diff",
          "patterns": [
            {
              "include": "source.diff"
            }
          ]
        }
      ]
    },
    "dockercompose-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:dockercompose)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.dockercompose",
          "patterns": [
            {
              "include": "source.yaml"
            }
          ]
        }
      ]
    },
    "dockerfile-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:dockerfile)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.dockerfile",
          "patterns": [
            {
              "include": "source.dockerfile"
            }
          ]
        }
      ]
    },
    "fsharp-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:fsharp)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.fsharp",
          "patterns": [
            {
              "include": "source.fsharp"
            }
          ]
        }
      ]
    },
    "go-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:go)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.go",
          "patterns": [
            {
              "include": "source.go"
            }
          ]
        }
      ]
    },
    "groovy-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:groovy)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.groovy",
          "patterns": [
            {
              "include": "source.groovy"
            }
          ]
        }
      ]
    },
    "handlebars-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:handlebars)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.handlebars",
          "patterns": [
            {
              "include": "text.html.handlebars"
            }
          ]
        }
      ]
    },
    "hlsl-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:hlsl)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.hlsl",
          "patterns": [
            {
              "include": "source.hlsl"
            }
          ]
        }
      ]
    },
    "html-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:html)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.html",
          "patterns": [
            {
              "include": "text.html.derivative"
            }
          ]
        }
      ]
    },
    "ignore-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:ignore)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.ignore",
          "patterns": [
            {
              "include": "source.ignore"
            }
          ]
        }
      ]
    },
    "ini-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:ini)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.ini",
          "patterns": [
            {
              "include": "source.ini"
            }
          ]
        }
      ]
    },
    "jade-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:jade)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.jade",
          "patterns": [
            {
              "include": "text.pug"
            }
          ]
        }
      ]
    },
    "java-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:java)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.java",
          "patterns": [
            {
              "include": "source.java"
            }
          ]
        }
      ]
    },
    "javascript-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:javascript)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.javascript",
          "patterns": [
            {
              "include": "source.js"
            }
          ]
        }
      ]
    },
    "js-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:js)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.js",
          "patterns": [
            {
              "include": "source.js"
            }
          ]
        }
      ]
    },
    "json-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:json)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.json",
          "patterns": [
            {
              "include": "source.json"
            }
          ]
        }
      ]
    },
    "jsonc-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:jsonc)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.jsonc",
          "patterns": [
            {
              "include": "source.json.comments"
            }
          ]
        }
      ]
    },
    "jsonl-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:jsonl)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.jsonl",
          "patterns": [
            {
              "include": "source.json.lines"
            }
          ]
        }
      ]
    },
    "jsx-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:jsx)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.jsx",
          "patterns": [
            {
              "include": "source.js.jsx"
            }
          ]
        }
      ]
    },
    "julia-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:julia)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.julia",
          "patterns": [
            {
              "include": "source.julia"
            }
          ]
        }
      ]
    },
    "latex-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:latex)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.latex",
          "patterns": [
            {
              "include": "text.tex.latex"
            }
          ]
        }
      ]
    },
    "less-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:less)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.less",
          "patterns": [
            {
              "include": "source.css.less"
            }
          ]
        }
      ]
    },
    "log-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:log)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.log",
          "patterns": [
            {
              "include": "text.log"
            }
          ]
        }
      ]
    },
    "lua-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:lua)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.lua",
          "patterns": [
            {
              "include": "source.lua"
            }
          ]
        }
      ]
    },
    "make-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:make)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.make",
          "patterns": [
            {
              "include": "source.makefile"
            }
          ]
        }
      ]
    },
    "makefile-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:makefile)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.makefile",
          "patterns": [
            {
              "include": "source.makefile"
            }
          ]
        }
      ]
    },
    "markdown-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:markdown)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "while": "\\1",
          "name": "meta.embedded.inline.markdown",
          "patterns": [
            {
              "include": "text.html.markdown"
            }
          ]
        }
      ]
    },
    "math-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:math)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.math",
          "patterns": [
            {
              "include": "text.html.markdown.math"
            }
          ]
        }
      ]
    },
    "objc-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:objc)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.objc",
          "patterns": [
            {
              "include": "source.objc"
            }
          ]
        }
      ]
    },
    "objcpp-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:objcpp)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.objcpp",
          "patterns": [
            {
              "include": "source.objcpp"
            }
          ]
        }
      ]
    },
    "perl-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:perl)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.perl",
          "patterns": [
            {
              "include": "source.perl"
            }
          ]
        }
      ]
    },
    "php-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:php)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.php",
          "patterns": [
            {
              "include": "text.html.php"
            }
          ]
        }
      ]
    },
    "pip-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:pip)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.pip",
          "patterns": [
            {
              "include": "source.pip-requirements"
            }
          ]
        }
      ]
    },
    "powerfx-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:powerfx)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.powerfx",
          "patterns": [
            {
              "include": "source.js"
            }
          ]
        }
      ]
    },
    "powershell-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:powershell)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.powershell",
          "patterns": [
            {
              "include": "source.powershell"
            }
          ]
        }
      ]
    },
    "properties-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:properties)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.properties",
          "patterns": [
            {
              "include": "source.properties"
            }
          ]
        }
      ]
    },
    "py-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:py)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.py",
          "patterns": [
            {
              "include": "source.python"
            }
          ]
        }
      ]
    },
    "python-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:python)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.python",
          "patterns": [
            {
              "include": "source.python"
            }
          ]
        }
      ]
    },
    "r-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:r)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.r",
          "patterns": [
            {
              "include": "source.r"
            }
          ]
        }
      ]
    },
    "raku-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:raku)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.raku",
          "patterns": [
            {
              "include": "source.perl.6"
            }
          ]
        }
      ]
    },
    "razor-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:razor)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.razor",
          "patterns": [
            {
              "include": "text.html.cshtml"
            }
          ]
        }
      ]
    },
    "rebase-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:rebase)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.rebase",
          "patterns": [
            {
              "include": "text.git-rebase"
            }
          ]
        }
      ]
    },
    "regex-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:regex)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.regex",
          "patterns": [
            {
              "include": "source.regexp.python"
            }
          ]
        }
      ]
    },
    "requirements-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:requirements)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.requirements",
          "patterns": [
            {
              "include": "source.pip-requirements"
            }
          ]
        }
      ]
    },
    "rst-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:rst)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.rst",
          "patterns": [
            {
              "include": "source.rst"
            }
          ]
        }
      ]
    },
    "ruby-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:ruby)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.ruby",
          "patterns": [
            {
              "include": "source.ruby"
            }
          ]
        }
      ]
    },
    "rust-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:rust)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.rust",
          "patterns": [
            {
              "include": "source.rust"
            }
          ]
        }
      ]
    },
    "scss-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:scss)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.scss",
          "patterns": [
            {
              "include": "source.css.scss"
            }
          ]
        }
      ]
    },
    "shaderlab-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:shaderlab)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.shaderlab",
          "patterns": [
            {
              "include": "source.shaderlab"
            }
          ]
        }
      ]
    },
    "shell-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:shell)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.shell",
          "patterns": [
            {
              "include": "source.shell"
            }
          ]
        }
      ]
    },
    "slim-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:slim)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.slim",
          "patterns": [
            {
              "include": "source.slim"
            }
          ]
        }
      ]
    },
    "sql-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:sql)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.sql",
          "patterns": [
            {
              "include": "source.sql"
            }
          ]
        }
      ]
    },
    "swift-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:swift)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.swift",
          "patterns": [
            {
              "include": "source.swift"
            }
          ]
        }
      ]
    },
    "tex-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:tex)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.tex",
          "patterns": [
            {
              "include": "text.tex"
            }
          ]
        }
      ]
    },
    "ts-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:ts)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.ts",
          "patterns": [
            {
              "include": "source.ts"
            }
          ]
        }
      ]
    },
    "tsx-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:tsx)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.tsx",
          "patterns": [
            {
              "include": "source.tsx"
            }
          ]
        }
      ]
    },
    "typescript-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:typescript)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.typescript",
          "patterns": [
            {
              "include": "source.ts"
            }
          ]
        }
      ]
    },
    "vb-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:vb)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.vb",
          "patterns": [
            {
              "include": "source.asp.vb.net"
            }
          ]
        }
      ]
    },
    "xml-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:xml)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.xml",
          "patterns": [
            {
              "include": "text.xml"
            }
          ]
        }
      ]
    },
    "xsl-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:xsl)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.xsl",
          "patterns": [
            {
              "include": "text.xml.xsl"
            }
          ]
        }
      ]
    },
    "yaml-block-scalar": {
      "begin": "(?i)(?:(\\|)|(>))([1-9])?([-+])?[ \t]+(#[ \t]*(?:yaml)[ \t]*\\n)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "3": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "4": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "5": {
          "patterns": [
            {
              "begin": "#",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.yaml"
                }
              },
              "end": "\\n"
            }
          ],
          "name": "comment.line.number-sign.yaml"
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "(?>^|\\G)([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "name": "meta.embedded.inline.yaml",
          "patterns": [
            {
              "include": "source.yaml"
            }
          ]
        }
      ]
    }
  }
}