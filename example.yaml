bat-example: | # bat
  ECHO Hello, World!

bibtex-example: | # bibtex
  @book{HelloWorld}

c-example: | # c
  // First Line Issue
  #include <stdio.h>
  int main() {
    printf("Hello, World!");
    return 0;
  }

clojure-example: | # clojure
  (println "Hello, World!")

coffeescript-example: | # coffee
  console.log "Hello, World!"

cpp-example: | # c++
  // First Line Issue
  #include <iostream>
  int main()
  {
    std::cout << "Hello, World!" << std::endl;
    return 0;
  }

csharp-example: | # csharp
  public class HelloWorld
  {
    public static void Main(string[] args)
    {
      System.Console.WriteLine("Hello, World!");
    }
  }

css-example: | # css
  .HelloWorld { }

cuda-cpp-example: | # cuda
  // First Line Issue
  #include <stdio.h>
  __global__ void hello_world(){
    printf("Hello, World!");
  }

  int main() {
      hello_world<<<1,1>>>();
      return 0;
  }

dart-example: | # dart
  void main() {
    print('Hello, World!');
  }

diff-example: | # diff
  - Hello World!
  + Hello, World!

dockercompose-example: | # dockercompose
  services:
    hello-world:
      build: .

dockerfile-example: | # dockerfile
  # First Line Issue
  FROM alpine:latest
  CMD ["echo", "Hello, World!"]

fsharp-example: | # fsharp
  open System
  printfn "Hello, World!"




python-example: | # python
  print("Hello World!")

java-example: | # java
  class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello World!"); 
    }
  }

javascript-example: | # js
  console.log("Hello World!")

regex-example: | # regex
  [Hh]ello [Ww]orld!?
